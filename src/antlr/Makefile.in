# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/antlr
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libantlr_a_AR = $(AR) $(ARFLAGS)
libantlr_a_LIBADD =
am__libantlr_a_SOURCES_DIST = ANTLRException.hpp ANTLRUtil.cpp \
	ANTLRUtil.hpp ASTArray.hpp ASTFactory.cpp ASTFactory.hpp \
	AST.hpp ASTNULLType.cpp ASTNULLType.hpp ASTPair.hpp \
	ASTRefCount.cpp ASTRefCount.hpp BaseAST.cpp BaseAST.hpp \
	BitSet.cpp BitSet.hpp CharBuffer.cpp CharBuffer.hpp \
	CharInputBuffer.hpp CharScanner.cpp CharScanner.hpp \
	CharStreamException.hpp CharStreamIOException.hpp \
	CircularQueue.hpp CommonAST.cpp CommonAST.hpp \
	CommonASTWithHiddenTokens.cpp CommonASTWithHiddenTokens.hpp \
	CommonHiddenStreamToken.cpp CommonHiddenStreamToken.hpp \
	CommonToken.cpp CommonToken.hpp config.hpp InputBuffer.cpp \
	InputBuffer.hpp IOException.hpp LexerSharedInputState.hpp \
	LLkParser.cpp LLkParser.hpp Makefile.am Makefile.in \
	MismatchedCharException.cpp MismatchedCharException.hpp \
	MismatchedTokenException.cpp MismatchedTokenException.hpp \
	NoViableAltException.cpp NoViableAltException.hpp \
	NoViableAltForCharException.cpp \
	NoViableAltForCharException.hpp Parser.cpp Parser.hpp \
	ParserSharedInputState.hpp RecognitionException.cpp \
	RecognitionException.hpp RefCount.hpp SemanticException.hpp \
	String.cpp String.hpp TokenBuffer.cpp TokenBuffer.hpp \
	Token.cpp Token.hpp TokenStreamBasicFilter.cpp \
	TokenStreamBasicFilter.hpp TokenStreamException.hpp \
	TokenStreamHiddenTokenFilter.cpp \
	TokenStreamHiddenTokenFilter.hpp TokenStream.hpp \
	TokenStreamIOException.hpp TokenStreamRecognitionException.hpp \
	TokenStreamRetryException.hpp TokenStreamSelector.cpp \
	TokenStreamSelector.hpp TreeParser.cpp TreeParser.hpp \
	TreeParserSharedInputState.hpp
am__objects_1 = libantlr_a-ANTLRUtil.$(OBJEXT) \
	libantlr_a-ASTFactory.$(OBJEXT) \
	libantlr_a-ASTNULLType.$(OBJEXT) \
	libantlr_a-ASTRefCount.$(OBJEXT) libantlr_a-BaseAST.$(OBJEXT) \
	libantlr_a-BitSet.$(OBJEXT) libantlr_a-CharBuffer.$(OBJEXT) \
	libantlr_a-CharScanner.$(OBJEXT) \
	libantlr_a-CommonAST.$(OBJEXT) \
	libantlr_a-CommonASTWithHiddenTokens.$(OBJEXT) \
	libantlr_a-CommonHiddenStreamToken.$(OBJEXT) \
	libantlr_a-CommonToken.$(OBJEXT) \
	libantlr_a-InputBuffer.$(OBJEXT) \
	libantlr_a-LLkParser.$(OBJEXT) \
	libantlr_a-MismatchedCharException.$(OBJEXT) \
	libantlr_a-MismatchedTokenException.$(OBJEXT) \
	libantlr_a-NoViableAltException.$(OBJEXT) \
	libantlr_a-NoViableAltForCharException.$(OBJEXT) \
	libantlr_a-Parser.$(OBJEXT) \
	libantlr_a-RecognitionException.$(OBJEXT) \
	libantlr_a-String.$(OBJEXT) libantlr_a-TokenBuffer.$(OBJEXT) \
	libantlr_a-Token.$(OBJEXT) \
	libantlr_a-TokenStreamBasicFilter.$(OBJEXT) \
	libantlr_a-TokenStreamHiddenTokenFilter.$(OBJEXT) \
	libantlr_a-TokenStreamSelector.$(OBJEXT) \
	libantlr_a-TreeParser.$(OBJEXT)
@BUILDASLIBRARY_FALSE@am_libantlr_a_OBJECTS = $(am__objects_1)
libantlr_a_OBJECTS = $(am_libantlr_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libantlr_la_LIBADD =
am__libantlr_la_SOURCES_DIST = ANTLRException.hpp ANTLRUtil.cpp \
	ANTLRUtil.hpp ASTArray.hpp ASTFactory.cpp ASTFactory.hpp \
	AST.hpp ASTNULLType.cpp ASTNULLType.hpp ASTPair.hpp \
	ASTRefCount.cpp ASTRefCount.hpp BaseAST.cpp BaseAST.hpp \
	BitSet.cpp BitSet.hpp CharBuffer.cpp CharBuffer.hpp \
	CharInputBuffer.hpp CharScanner.cpp CharScanner.hpp \
	CharStreamException.hpp CharStreamIOException.hpp \
	CircularQueue.hpp CommonAST.cpp CommonAST.hpp \
	CommonASTWithHiddenTokens.cpp CommonASTWithHiddenTokens.hpp \
	CommonHiddenStreamToken.cpp CommonHiddenStreamToken.hpp \
	CommonToken.cpp CommonToken.hpp config.hpp InputBuffer.cpp \
	InputBuffer.hpp IOException.hpp LexerSharedInputState.hpp \
	LLkParser.cpp LLkParser.hpp Makefile.am Makefile.in \
	MismatchedCharException.cpp MismatchedCharException.hpp \
	MismatchedTokenException.cpp MismatchedTokenException.hpp \
	NoViableAltException.cpp NoViableAltException.hpp \
	NoViableAltForCharException.cpp \
	NoViableAltForCharException.hpp Parser.cpp Parser.hpp \
	ParserSharedInputState.hpp RecognitionException.cpp \
	RecognitionException.hpp RefCount.hpp SemanticException.hpp \
	String.cpp String.hpp TokenBuffer.cpp TokenBuffer.hpp \
	Token.cpp Token.hpp TokenStreamBasicFilter.cpp \
	TokenStreamBasicFilter.hpp TokenStreamException.hpp \
	TokenStreamHiddenTokenFilter.cpp \
	TokenStreamHiddenTokenFilter.hpp TokenStream.hpp \
	TokenStreamIOException.hpp TokenStreamRecognitionException.hpp \
	TokenStreamRetryException.hpp TokenStreamSelector.cpp \
	TokenStreamSelector.hpp TreeParser.cpp TreeParser.hpp \
	TreeParserSharedInputState.hpp
am__objects_2 = ANTLRUtil.lo ASTFactory.lo ASTNULLType.lo \
	ASTRefCount.lo BaseAST.lo BitSet.lo CharBuffer.lo \
	CharScanner.lo CommonAST.lo CommonASTWithHiddenTokens.lo \
	CommonHiddenStreamToken.lo CommonToken.lo InputBuffer.lo \
	LLkParser.lo MismatchedCharException.lo \
	MismatchedTokenException.lo NoViableAltException.lo \
	NoViableAltForCharException.lo Parser.lo \
	RecognitionException.lo String.lo TokenBuffer.lo Token.lo \
	TokenStreamBasicFilter.lo TokenStreamHiddenTokenFilter.lo \
	TokenStreamSelector.lo TreeParser.lo
@BUILDASLIBRARY_TRUE@am_libantlr_la_OBJECTS = $(am__objects_2)
libantlr_la_OBJECTS = $(am_libantlr_la_OBJECTS)
@BUILDASLIBRARY_TRUE@am_libantlr_la_rpath =
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libantlr_a_SOURCES) $(libantlr_la_SOURCES)
DIST_SOURCES = $(am__libantlr_a_SOURCES_DIST) \
	$(am__libantlr_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEC_PREFIX = @EXEC_PREFIX@
EXEEXT = @EXEEXT@
EXT_INCLUDES = @EXT_INCLUDES@
EXT_LIBS = @EXT_LIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
HAVE_64BIT_OS = @HAVE_64BIT_OS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MagickConfig = @MagickConfig@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
INCLUDES = -I$(top_srcdir)/src $(all_includes)
antlr_sources = ANTLRException.hpp ANTLRUtil.cpp ANTLRUtil.hpp \
	ASTArray.hpp ASTFactory.cpp ASTFactory.hpp AST.hpp \
	ASTNULLType.cpp ASTNULLType.hpp ASTPair.hpp ASTRefCount.cpp \
	ASTRefCount.hpp BaseAST.cpp BaseAST.hpp BitSet.cpp BitSet.hpp \
	CharBuffer.cpp CharBuffer.hpp CharInputBuffer.hpp \
	CharScanner.cpp CharScanner.hpp CharStreamException.hpp \
	CharStreamIOException.hpp CircularQueue.hpp CommonAST.cpp \
	CommonAST.hpp CommonASTWithHiddenTokens.cpp \
	CommonASTWithHiddenTokens.hpp CommonHiddenStreamToken.cpp \
	CommonHiddenStreamToken.hpp CommonToken.cpp CommonToken.hpp \
	config.hpp InputBuffer.cpp InputBuffer.hpp IOException.hpp \
	LexerSharedInputState.hpp LLkParser.cpp LLkParser.hpp \
	Makefile.am Makefile.in MismatchedCharException.cpp \
	MismatchedCharException.hpp MismatchedTokenException.cpp \
	MismatchedTokenException.hpp NoViableAltException.cpp \
	NoViableAltException.hpp NoViableAltForCharException.cpp \
	NoViableAltForCharException.hpp Parser.cpp Parser.hpp \
	ParserSharedInputState.hpp RecognitionException.cpp \
	RecognitionException.hpp RefCount.hpp SemanticException.hpp \
	String.cpp String.hpp TokenBuffer.cpp TokenBuffer.hpp \
	Token.cpp Token.hpp TokenStreamBasicFilter.cpp \
	TokenStreamBasicFilter.hpp TokenStreamException.hpp \
	TokenStreamHiddenTokenFilter.cpp \
	TokenStreamHiddenTokenFilter.hpp TokenStream.hpp \
	TokenStreamIOException.hpp TokenStreamRecognitionException.hpp \
	TokenStreamRetryException.hpp TokenStreamSelector.cpp \
	TokenStreamSelector.hpp TreeParser.cpp TreeParser.hpp \
	TreeParserSharedInputState.hpp
@BUILDASLIBRARY_FALSE@lib_LIBRARIES = libantlr.a
@BUILDASLIBRARY_FALSE@libantlr_a_SOURCES = $(antlr_sources)
# trigger basename generation
@BUILDASLIBRARY_FALSE@libantlr_a_CXXFLAGS = $(AM_CXXFLAGS)

# if we build a shared library, antlr stuff has to build
# as shared library also
@BUILDASLIBRARY_TRUE@noinst_LTLIBRARIES = libantlr.la
@BUILDASLIBRARY_TRUE@libantlr_la_SOURCES = $(antlr_sources)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/antlr/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/antlr/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libantlr.a: $(libantlr_a_OBJECTS) $(libantlr_a_DEPENDENCIES) 
	-rm -f libantlr.a
	$(libantlr_a_AR) libantlr.a $(libantlr_a_OBJECTS) $(libantlr_a_LIBADD)
	$(RANLIB) libantlr.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libantlr.la: $(libantlr_la_OBJECTS) $(libantlr_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libantlr_la_rpath) $(libantlr_la_OBJECTS) $(libantlr_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ANTLRUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ASTFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ASTNULLType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ASTRefCount.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BaseAST.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CharBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CharScanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommonAST.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommonASTWithHiddenTokens.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommonHiddenStreamToken.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommonToken.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LLkParser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MismatchedCharException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MismatchedTokenException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoViableAltException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoViableAltForCharException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RecognitionException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/String.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Token.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenStreamBasicFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenStreamHiddenTokenFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenStreamSelector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TreeParser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-ANTLRUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-ASTFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-ASTNULLType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-ASTRefCount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-BaseAST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-BitSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CharBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CharScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CommonAST.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-CommonToken.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-InputBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-LLkParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-MismatchedCharException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-MismatchedTokenException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-NoViableAltException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-NoViableAltForCharException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-Parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-RecognitionException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-String.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-Token.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-TokenBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-TokenStreamSelector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libantlr_a-TreeParser.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libantlr_a-ANTLRUtil.o: ANTLRUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ANTLRUtil.o -MD -MP -MF $(DEPDIR)/libantlr_a-ANTLRUtil.Tpo -c -o libantlr_a-ANTLRUtil.o `test -f 'ANTLRUtil.cpp' || echo '$(srcdir)/'`ANTLRUtil.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ANTLRUtil.Tpo $(DEPDIR)/libantlr_a-ANTLRUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ANTLRUtil.cpp' object='libantlr_a-ANTLRUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ANTLRUtil.o `test -f 'ANTLRUtil.cpp' || echo '$(srcdir)/'`ANTLRUtil.cpp

libantlr_a-ANTLRUtil.obj: ANTLRUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ANTLRUtil.obj -MD -MP -MF $(DEPDIR)/libantlr_a-ANTLRUtil.Tpo -c -o libantlr_a-ANTLRUtil.obj `if test -f 'ANTLRUtil.cpp'; then $(CYGPATH_W) 'ANTLRUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/ANTLRUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ANTLRUtil.Tpo $(DEPDIR)/libantlr_a-ANTLRUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ANTLRUtil.cpp' object='libantlr_a-ANTLRUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ANTLRUtil.obj `if test -f 'ANTLRUtil.cpp'; then $(CYGPATH_W) 'ANTLRUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/ANTLRUtil.cpp'; fi`

libantlr_a-ASTFactory.o: ASTFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTFactory.o -MD -MP -MF $(DEPDIR)/libantlr_a-ASTFactory.Tpo -c -o libantlr_a-ASTFactory.o `test -f 'ASTFactory.cpp' || echo '$(srcdir)/'`ASTFactory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTFactory.Tpo $(DEPDIR)/libantlr_a-ASTFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTFactory.cpp' object='libantlr_a-ASTFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTFactory.o `test -f 'ASTFactory.cpp' || echo '$(srcdir)/'`ASTFactory.cpp

libantlr_a-ASTFactory.obj: ASTFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTFactory.obj -MD -MP -MF $(DEPDIR)/libantlr_a-ASTFactory.Tpo -c -o libantlr_a-ASTFactory.obj `if test -f 'ASTFactory.cpp'; then $(CYGPATH_W) 'ASTFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTFactory.Tpo $(DEPDIR)/libantlr_a-ASTFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTFactory.cpp' object='libantlr_a-ASTFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTFactory.obj `if test -f 'ASTFactory.cpp'; then $(CYGPATH_W) 'ASTFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTFactory.cpp'; fi`

libantlr_a-ASTNULLType.o: ASTNULLType.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTNULLType.o -MD -MP -MF $(DEPDIR)/libantlr_a-ASTNULLType.Tpo -c -o libantlr_a-ASTNULLType.o `test -f 'ASTNULLType.cpp' || echo '$(srcdir)/'`ASTNULLType.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTNULLType.Tpo $(DEPDIR)/libantlr_a-ASTNULLType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTNULLType.cpp' object='libantlr_a-ASTNULLType.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTNULLType.o `test -f 'ASTNULLType.cpp' || echo '$(srcdir)/'`ASTNULLType.cpp

libantlr_a-ASTNULLType.obj: ASTNULLType.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTNULLType.obj -MD -MP -MF $(DEPDIR)/libantlr_a-ASTNULLType.Tpo -c -o libantlr_a-ASTNULLType.obj `if test -f 'ASTNULLType.cpp'; then $(CYGPATH_W) 'ASTNULLType.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTNULLType.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTNULLType.Tpo $(DEPDIR)/libantlr_a-ASTNULLType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTNULLType.cpp' object='libantlr_a-ASTNULLType.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTNULLType.obj `if test -f 'ASTNULLType.cpp'; then $(CYGPATH_W) 'ASTNULLType.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTNULLType.cpp'; fi`

libantlr_a-ASTRefCount.o: ASTRefCount.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTRefCount.o -MD -MP -MF $(DEPDIR)/libantlr_a-ASTRefCount.Tpo -c -o libantlr_a-ASTRefCount.o `test -f 'ASTRefCount.cpp' || echo '$(srcdir)/'`ASTRefCount.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTRefCount.Tpo $(DEPDIR)/libantlr_a-ASTRefCount.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTRefCount.cpp' object='libantlr_a-ASTRefCount.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTRefCount.o `test -f 'ASTRefCount.cpp' || echo '$(srcdir)/'`ASTRefCount.cpp

libantlr_a-ASTRefCount.obj: ASTRefCount.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-ASTRefCount.obj -MD -MP -MF $(DEPDIR)/libantlr_a-ASTRefCount.Tpo -c -o libantlr_a-ASTRefCount.obj `if test -f 'ASTRefCount.cpp'; then $(CYGPATH_W) 'ASTRefCount.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTRefCount.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-ASTRefCount.Tpo $(DEPDIR)/libantlr_a-ASTRefCount.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ASTRefCount.cpp' object='libantlr_a-ASTRefCount.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-ASTRefCount.obj `if test -f 'ASTRefCount.cpp'; then $(CYGPATH_W) 'ASTRefCount.cpp'; else $(CYGPATH_W) '$(srcdir)/ASTRefCount.cpp'; fi`

libantlr_a-BaseAST.o: BaseAST.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-BaseAST.o -MD -MP -MF $(DEPDIR)/libantlr_a-BaseAST.Tpo -c -o libantlr_a-BaseAST.o `test -f 'BaseAST.cpp' || echo '$(srcdir)/'`BaseAST.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-BaseAST.Tpo $(DEPDIR)/libantlr_a-BaseAST.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BaseAST.cpp' object='libantlr_a-BaseAST.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-BaseAST.o `test -f 'BaseAST.cpp' || echo '$(srcdir)/'`BaseAST.cpp

libantlr_a-BaseAST.obj: BaseAST.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-BaseAST.obj -MD -MP -MF $(DEPDIR)/libantlr_a-BaseAST.Tpo -c -o libantlr_a-BaseAST.obj `if test -f 'BaseAST.cpp'; then $(CYGPATH_W) 'BaseAST.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseAST.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-BaseAST.Tpo $(DEPDIR)/libantlr_a-BaseAST.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BaseAST.cpp' object='libantlr_a-BaseAST.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-BaseAST.obj `if test -f 'BaseAST.cpp'; then $(CYGPATH_W) 'BaseAST.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseAST.cpp'; fi`

libantlr_a-BitSet.o: BitSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-BitSet.o -MD -MP -MF $(DEPDIR)/libantlr_a-BitSet.Tpo -c -o libantlr_a-BitSet.o `test -f 'BitSet.cpp' || echo '$(srcdir)/'`BitSet.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-BitSet.Tpo $(DEPDIR)/libantlr_a-BitSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitSet.cpp' object='libantlr_a-BitSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-BitSet.o `test -f 'BitSet.cpp' || echo '$(srcdir)/'`BitSet.cpp

libantlr_a-BitSet.obj: BitSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-BitSet.obj -MD -MP -MF $(DEPDIR)/libantlr_a-BitSet.Tpo -c -o libantlr_a-BitSet.obj `if test -f 'BitSet.cpp'; then $(CYGPATH_W) 'BitSet.cpp'; else $(CYGPATH_W) '$(srcdir)/BitSet.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-BitSet.Tpo $(DEPDIR)/libantlr_a-BitSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BitSet.cpp' object='libantlr_a-BitSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-BitSet.obj `if test -f 'BitSet.cpp'; then $(CYGPATH_W) 'BitSet.cpp'; else $(CYGPATH_W) '$(srcdir)/BitSet.cpp'; fi`

libantlr_a-CharBuffer.o: CharBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CharBuffer.o -MD -MP -MF $(DEPDIR)/libantlr_a-CharBuffer.Tpo -c -o libantlr_a-CharBuffer.o `test -f 'CharBuffer.cpp' || echo '$(srcdir)/'`CharBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CharBuffer.Tpo $(DEPDIR)/libantlr_a-CharBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CharBuffer.cpp' object='libantlr_a-CharBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CharBuffer.o `test -f 'CharBuffer.cpp' || echo '$(srcdir)/'`CharBuffer.cpp

libantlr_a-CharBuffer.obj: CharBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CharBuffer.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CharBuffer.Tpo -c -o libantlr_a-CharBuffer.obj `if test -f 'CharBuffer.cpp'; then $(CYGPATH_W) 'CharBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CharBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CharBuffer.Tpo $(DEPDIR)/libantlr_a-CharBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CharBuffer.cpp' object='libantlr_a-CharBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CharBuffer.obj `if test -f 'CharBuffer.cpp'; then $(CYGPATH_W) 'CharBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CharBuffer.cpp'; fi`

libantlr_a-CharScanner.o: CharScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CharScanner.o -MD -MP -MF $(DEPDIR)/libantlr_a-CharScanner.Tpo -c -o libantlr_a-CharScanner.o `test -f 'CharScanner.cpp' || echo '$(srcdir)/'`CharScanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CharScanner.Tpo $(DEPDIR)/libantlr_a-CharScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CharScanner.cpp' object='libantlr_a-CharScanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CharScanner.o `test -f 'CharScanner.cpp' || echo '$(srcdir)/'`CharScanner.cpp

libantlr_a-CharScanner.obj: CharScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CharScanner.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CharScanner.Tpo -c -o libantlr_a-CharScanner.obj `if test -f 'CharScanner.cpp'; then $(CYGPATH_W) 'CharScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/CharScanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CharScanner.Tpo $(DEPDIR)/libantlr_a-CharScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CharScanner.cpp' object='libantlr_a-CharScanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CharScanner.obj `if test -f 'CharScanner.cpp'; then $(CYGPATH_W) 'CharScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/CharScanner.cpp'; fi`

libantlr_a-CommonAST.o: CommonAST.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonAST.o -MD -MP -MF $(DEPDIR)/libantlr_a-CommonAST.Tpo -c -o libantlr_a-CommonAST.o `test -f 'CommonAST.cpp' || echo '$(srcdir)/'`CommonAST.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonAST.Tpo $(DEPDIR)/libantlr_a-CommonAST.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonAST.cpp' object='libantlr_a-CommonAST.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonAST.o `test -f 'CommonAST.cpp' || echo '$(srcdir)/'`CommonAST.cpp

libantlr_a-CommonAST.obj: CommonAST.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonAST.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CommonAST.Tpo -c -o libantlr_a-CommonAST.obj `if test -f 'CommonAST.cpp'; then $(CYGPATH_W) 'CommonAST.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonAST.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonAST.Tpo $(DEPDIR)/libantlr_a-CommonAST.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonAST.cpp' object='libantlr_a-CommonAST.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonAST.obj `if test -f 'CommonAST.cpp'; then $(CYGPATH_W) 'CommonAST.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonAST.cpp'; fi`

libantlr_a-CommonASTWithHiddenTokens.o: CommonASTWithHiddenTokens.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonASTWithHiddenTokens.o -MD -MP -MF $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Tpo -c -o libantlr_a-CommonASTWithHiddenTokens.o `test -f 'CommonASTWithHiddenTokens.cpp' || echo '$(srcdir)/'`CommonASTWithHiddenTokens.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Tpo $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonASTWithHiddenTokens.cpp' object='libantlr_a-CommonASTWithHiddenTokens.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonASTWithHiddenTokens.o `test -f 'CommonASTWithHiddenTokens.cpp' || echo '$(srcdir)/'`CommonASTWithHiddenTokens.cpp

libantlr_a-CommonASTWithHiddenTokens.obj: CommonASTWithHiddenTokens.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonASTWithHiddenTokens.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Tpo -c -o libantlr_a-CommonASTWithHiddenTokens.obj `if test -f 'CommonASTWithHiddenTokens.cpp'; then $(CYGPATH_W) 'CommonASTWithHiddenTokens.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonASTWithHiddenTokens.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Tpo $(DEPDIR)/libantlr_a-CommonASTWithHiddenTokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonASTWithHiddenTokens.cpp' object='libantlr_a-CommonASTWithHiddenTokens.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonASTWithHiddenTokens.obj `if test -f 'CommonASTWithHiddenTokens.cpp'; then $(CYGPATH_W) 'CommonASTWithHiddenTokens.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonASTWithHiddenTokens.cpp'; fi`

libantlr_a-CommonHiddenStreamToken.o: CommonHiddenStreamToken.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonHiddenStreamToken.o -MD -MP -MF $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Tpo -c -o libantlr_a-CommonHiddenStreamToken.o `test -f 'CommonHiddenStreamToken.cpp' || echo '$(srcdir)/'`CommonHiddenStreamToken.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Tpo $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonHiddenStreamToken.cpp' object='libantlr_a-CommonHiddenStreamToken.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonHiddenStreamToken.o `test -f 'CommonHiddenStreamToken.cpp' || echo '$(srcdir)/'`CommonHiddenStreamToken.cpp

libantlr_a-CommonHiddenStreamToken.obj: CommonHiddenStreamToken.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonHiddenStreamToken.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Tpo -c -o libantlr_a-CommonHiddenStreamToken.obj `if test -f 'CommonHiddenStreamToken.cpp'; then $(CYGPATH_W) 'CommonHiddenStreamToken.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonHiddenStreamToken.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Tpo $(DEPDIR)/libantlr_a-CommonHiddenStreamToken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonHiddenStreamToken.cpp' object='libantlr_a-CommonHiddenStreamToken.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonHiddenStreamToken.obj `if test -f 'CommonHiddenStreamToken.cpp'; then $(CYGPATH_W) 'CommonHiddenStreamToken.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonHiddenStreamToken.cpp'; fi`

libantlr_a-CommonToken.o: CommonToken.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonToken.o -MD -MP -MF $(DEPDIR)/libantlr_a-CommonToken.Tpo -c -o libantlr_a-CommonToken.o `test -f 'CommonToken.cpp' || echo '$(srcdir)/'`CommonToken.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonToken.Tpo $(DEPDIR)/libantlr_a-CommonToken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonToken.cpp' object='libantlr_a-CommonToken.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonToken.o `test -f 'CommonToken.cpp' || echo '$(srcdir)/'`CommonToken.cpp

libantlr_a-CommonToken.obj: CommonToken.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-CommonToken.obj -MD -MP -MF $(DEPDIR)/libantlr_a-CommonToken.Tpo -c -o libantlr_a-CommonToken.obj `if test -f 'CommonToken.cpp'; then $(CYGPATH_W) 'CommonToken.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonToken.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-CommonToken.Tpo $(DEPDIR)/libantlr_a-CommonToken.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CommonToken.cpp' object='libantlr_a-CommonToken.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-CommonToken.obj `if test -f 'CommonToken.cpp'; then $(CYGPATH_W) 'CommonToken.cpp'; else $(CYGPATH_W) '$(srcdir)/CommonToken.cpp'; fi`

libantlr_a-InputBuffer.o: InputBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-InputBuffer.o -MD -MP -MF $(DEPDIR)/libantlr_a-InputBuffer.Tpo -c -o libantlr_a-InputBuffer.o `test -f 'InputBuffer.cpp' || echo '$(srcdir)/'`InputBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-InputBuffer.Tpo $(DEPDIR)/libantlr_a-InputBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='InputBuffer.cpp' object='libantlr_a-InputBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-InputBuffer.o `test -f 'InputBuffer.cpp' || echo '$(srcdir)/'`InputBuffer.cpp

libantlr_a-InputBuffer.obj: InputBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-InputBuffer.obj -MD -MP -MF $(DEPDIR)/libantlr_a-InputBuffer.Tpo -c -o libantlr_a-InputBuffer.obj `if test -f 'InputBuffer.cpp'; then $(CYGPATH_W) 'InputBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/InputBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-InputBuffer.Tpo $(DEPDIR)/libantlr_a-InputBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='InputBuffer.cpp' object='libantlr_a-InputBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-InputBuffer.obj `if test -f 'InputBuffer.cpp'; then $(CYGPATH_W) 'InputBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/InputBuffer.cpp'; fi`

libantlr_a-LLkParser.o: LLkParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-LLkParser.o -MD -MP -MF $(DEPDIR)/libantlr_a-LLkParser.Tpo -c -o libantlr_a-LLkParser.o `test -f 'LLkParser.cpp' || echo '$(srcdir)/'`LLkParser.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-LLkParser.Tpo $(DEPDIR)/libantlr_a-LLkParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LLkParser.cpp' object='libantlr_a-LLkParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-LLkParser.o `test -f 'LLkParser.cpp' || echo '$(srcdir)/'`LLkParser.cpp

libantlr_a-LLkParser.obj: LLkParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-LLkParser.obj -MD -MP -MF $(DEPDIR)/libantlr_a-LLkParser.Tpo -c -o libantlr_a-LLkParser.obj `if test -f 'LLkParser.cpp'; then $(CYGPATH_W) 'LLkParser.cpp'; else $(CYGPATH_W) '$(srcdir)/LLkParser.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-LLkParser.Tpo $(DEPDIR)/libantlr_a-LLkParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LLkParser.cpp' object='libantlr_a-LLkParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-LLkParser.obj `if test -f 'LLkParser.cpp'; then $(CYGPATH_W) 'LLkParser.cpp'; else $(CYGPATH_W) '$(srcdir)/LLkParser.cpp'; fi`

libantlr_a-MismatchedCharException.o: MismatchedCharException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-MismatchedCharException.o -MD -MP -MF $(DEPDIR)/libantlr_a-MismatchedCharException.Tpo -c -o libantlr_a-MismatchedCharException.o `test -f 'MismatchedCharException.cpp' || echo '$(srcdir)/'`MismatchedCharException.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-MismatchedCharException.Tpo $(DEPDIR)/libantlr_a-MismatchedCharException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MismatchedCharException.cpp' object='libantlr_a-MismatchedCharException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-MismatchedCharException.o `test -f 'MismatchedCharException.cpp' || echo '$(srcdir)/'`MismatchedCharException.cpp

libantlr_a-MismatchedCharException.obj: MismatchedCharException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-MismatchedCharException.obj -MD -MP -MF $(DEPDIR)/libantlr_a-MismatchedCharException.Tpo -c -o libantlr_a-MismatchedCharException.obj `if test -f 'MismatchedCharException.cpp'; then $(CYGPATH_W) 'MismatchedCharException.cpp'; else $(CYGPATH_W) '$(srcdir)/MismatchedCharException.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-MismatchedCharException.Tpo $(DEPDIR)/libantlr_a-MismatchedCharException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MismatchedCharException.cpp' object='libantlr_a-MismatchedCharException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-MismatchedCharException.obj `if test -f 'MismatchedCharException.cpp'; then $(CYGPATH_W) 'MismatchedCharException.cpp'; else $(CYGPATH_W) '$(srcdir)/MismatchedCharException.cpp'; fi`

libantlr_a-MismatchedTokenException.o: MismatchedTokenException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-MismatchedTokenException.o -MD -MP -MF $(DEPDIR)/libantlr_a-MismatchedTokenException.Tpo -c -o libantlr_a-MismatchedTokenException.o `test -f 'MismatchedTokenException.cpp' || echo '$(srcdir)/'`MismatchedTokenException.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-MismatchedTokenException.Tpo $(DEPDIR)/libantlr_a-MismatchedTokenException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MismatchedTokenException.cpp' object='libantlr_a-MismatchedTokenException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-MismatchedTokenException.o `test -f 'MismatchedTokenException.cpp' || echo '$(srcdir)/'`MismatchedTokenException.cpp

libantlr_a-MismatchedTokenException.obj: MismatchedTokenException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-MismatchedTokenException.obj -MD -MP -MF $(DEPDIR)/libantlr_a-MismatchedTokenException.Tpo -c -o libantlr_a-MismatchedTokenException.obj `if test -f 'MismatchedTokenException.cpp'; then $(CYGPATH_W) 'MismatchedTokenException.cpp'; else $(CYGPATH_W) '$(srcdir)/MismatchedTokenException.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-MismatchedTokenException.Tpo $(DEPDIR)/libantlr_a-MismatchedTokenException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MismatchedTokenException.cpp' object='libantlr_a-MismatchedTokenException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-MismatchedTokenException.obj `if test -f 'MismatchedTokenException.cpp'; then $(CYGPATH_W) 'MismatchedTokenException.cpp'; else $(CYGPATH_W) '$(srcdir)/MismatchedTokenException.cpp'; fi`

libantlr_a-NoViableAltException.o: NoViableAltException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-NoViableAltException.o -MD -MP -MF $(DEPDIR)/libantlr_a-NoViableAltException.Tpo -c -o libantlr_a-NoViableAltException.o `test -f 'NoViableAltException.cpp' || echo '$(srcdir)/'`NoViableAltException.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-NoViableAltException.Tpo $(DEPDIR)/libantlr_a-NoViableAltException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NoViableAltException.cpp' object='libantlr_a-NoViableAltException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-NoViableAltException.o `test -f 'NoViableAltException.cpp' || echo '$(srcdir)/'`NoViableAltException.cpp

libantlr_a-NoViableAltException.obj: NoViableAltException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-NoViableAltException.obj -MD -MP -MF $(DEPDIR)/libantlr_a-NoViableAltException.Tpo -c -o libantlr_a-NoViableAltException.obj `if test -f 'NoViableAltException.cpp'; then $(CYGPATH_W) 'NoViableAltException.cpp'; else $(CYGPATH_W) '$(srcdir)/NoViableAltException.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-NoViableAltException.Tpo $(DEPDIR)/libantlr_a-NoViableAltException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NoViableAltException.cpp' object='libantlr_a-NoViableAltException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-NoViableAltException.obj `if test -f 'NoViableAltException.cpp'; then $(CYGPATH_W) 'NoViableAltException.cpp'; else $(CYGPATH_W) '$(srcdir)/NoViableAltException.cpp'; fi`

libantlr_a-NoViableAltForCharException.o: NoViableAltForCharException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-NoViableAltForCharException.o -MD -MP -MF $(DEPDIR)/libantlr_a-NoViableAltForCharException.Tpo -c -o libantlr_a-NoViableAltForCharException.o `test -f 'NoViableAltForCharException.cpp' || echo '$(srcdir)/'`NoViableAltForCharException.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-NoViableAltForCharException.Tpo $(DEPDIR)/libantlr_a-NoViableAltForCharException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NoViableAltForCharException.cpp' object='libantlr_a-NoViableAltForCharException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-NoViableAltForCharException.o `test -f 'NoViableAltForCharException.cpp' || echo '$(srcdir)/'`NoViableAltForCharException.cpp

libantlr_a-NoViableAltForCharException.obj: NoViableAltForCharException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-NoViableAltForCharException.obj -MD -MP -MF $(DEPDIR)/libantlr_a-NoViableAltForCharException.Tpo -c -o libantlr_a-NoViableAltForCharException.obj `if test -f 'NoViableAltForCharException.cpp'; then $(CYGPATH_W) 'NoViableAltForCharException.cpp'; else $(CYGPATH_W) '$(srcdir)/NoViableAltForCharException.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-NoViableAltForCharException.Tpo $(DEPDIR)/libantlr_a-NoViableAltForCharException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NoViableAltForCharException.cpp' object='libantlr_a-NoViableAltForCharException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-NoViableAltForCharException.obj `if test -f 'NoViableAltForCharException.cpp'; then $(CYGPATH_W) 'NoViableAltForCharException.cpp'; else $(CYGPATH_W) '$(srcdir)/NoViableAltForCharException.cpp'; fi`

libantlr_a-Parser.o: Parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-Parser.o -MD -MP -MF $(DEPDIR)/libantlr_a-Parser.Tpo -c -o libantlr_a-Parser.o `test -f 'Parser.cpp' || echo '$(srcdir)/'`Parser.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-Parser.Tpo $(DEPDIR)/libantlr_a-Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Parser.cpp' object='libantlr_a-Parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-Parser.o `test -f 'Parser.cpp' || echo '$(srcdir)/'`Parser.cpp

libantlr_a-Parser.obj: Parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-Parser.obj -MD -MP -MF $(DEPDIR)/libantlr_a-Parser.Tpo -c -o libantlr_a-Parser.obj `if test -f 'Parser.cpp'; then $(CYGPATH_W) 'Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/Parser.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-Parser.Tpo $(DEPDIR)/libantlr_a-Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Parser.cpp' object='libantlr_a-Parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-Parser.obj `if test -f 'Parser.cpp'; then $(CYGPATH_W) 'Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/Parser.cpp'; fi`

libantlr_a-RecognitionException.o: RecognitionException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-RecognitionException.o -MD -MP -MF $(DEPDIR)/libantlr_a-RecognitionException.Tpo -c -o libantlr_a-RecognitionException.o `test -f 'RecognitionException.cpp' || echo '$(srcdir)/'`RecognitionException.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-RecognitionException.Tpo $(DEPDIR)/libantlr_a-RecognitionException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecognitionException.cpp' object='libantlr_a-RecognitionException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-RecognitionException.o `test -f 'RecognitionException.cpp' || echo '$(srcdir)/'`RecognitionException.cpp

libantlr_a-RecognitionException.obj: RecognitionException.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-RecognitionException.obj -MD -MP -MF $(DEPDIR)/libantlr_a-RecognitionException.Tpo -c -o libantlr_a-RecognitionException.obj `if test -f 'RecognitionException.cpp'; then $(CYGPATH_W) 'RecognitionException.cpp'; else $(CYGPATH_W) '$(srcdir)/RecognitionException.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-RecognitionException.Tpo $(DEPDIR)/libantlr_a-RecognitionException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RecognitionException.cpp' object='libantlr_a-RecognitionException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-RecognitionException.obj `if test -f 'RecognitionException.cpp'; then $(CYGPATH_W) 'RecognitionException.cpp'; else $(CYGPATH_W) '$(srcdir)/RecognitionException.cpp'; fi`

libantlr_a-String.o: String.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-String.o -MD -MP -MF $(DEPDIR)/libantlr_a-String.Tpo -c -o libantlr_a-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-String.Tpo $(DEPDIR)/libantlr_a-String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='String.cpp' object='libantlr_a-String.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp

libantlr_a-String.obj: String.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-String.obj -MD -MP -MF $(DEPDIR)/libantlr_a-String.Tpo -c -o libantlr_a-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-String.Tpo $(DEPDIR)/libantlr_a-String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='String.cpp' object='libantlr_a-String.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`

libantlr_a-TokenBuffer.o: TokenBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenBuffer.o -MD -MP -MF $(DEPDIR)/libantlr_a-TokenBuffer.Tpo -c -o libantlr_a-TokenBuffer.o `test -f 'TokenBuffer.cpp' || echo '$(srcdir)/'`TokenBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenBuffer.Tpo $(DEPDIR)/libantlr_a-TokenBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenBuffer.cpp' object='libantlr_a-TokenBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenBuffer.o `test -f 'TokenBuffer.cpp' || echo '$(srcdir)/'`TokenBuffer.cpp

libantlr_a-TokenBuffer.obj: TokenBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenBuffer.obj -MD -MP -MF $(DEPDIR)/libantlr_a-TokenBuffer.Tpo -c -o libantlr_a-TokenBuffer.obj `if test -f 'TokenBuffer.cpp'; then $(CYGPATH_W) 'TokenBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenBuffer.Tpo $(DEPDIR)/libantlr_a-TokenBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenBuffer.cpp' object='libantlr_a-TokenBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenBuffer.obj `if test -f 'TokenBuffer.cpp'; then $(CYGPATH_W) 'TokenBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenBuffer.cpp'; fi`

libantlr_a-Token.o: Token.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-Token.o -MD -MP -MF $(DEPDIR)/libantlr_a-Token.Tpo -c -o libantlr_a-Token.o `test -f 'Token.cpp' || echo '$(srcdir)/'`Token.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-Token.Tpo $(DEPDIR)/libantlr_a-Token.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Token.cpp' object='libantlr_a-Token.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-Token.o `test -f 'Token.cpp' || echo '$(srcdir)/'`Token.cpp

libantlr_a-Token.obj: Token.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-Token.obj -MD -MP -MF $(DEPDIR)/libantlr_a-Token.Tpo -c -o libantlr_a-Token.obj `if test -f 'Token.cpp'; then $(CYGPATH_W) 'Token.cpp'; else $(CYGPATH_W) '$(srcdir)/Token.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-Token.Tpo $(DEPDIR)/libantlr_a-Token.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Token.cpp' object='libantlr_a-Token.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-Token.obj `if test -f 'Token.cpp'; then $(CYGPATH_W) 'Token.cpp'; else $(CYGPATH_W) '$(srcdir)/Token.cpp'; fi`

libantlr_a-TokenStreamBasicFilter.o: TokenStreamBasicFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamBasicFilter.o -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Tpo -c -o libantlr_a-TokenStreamBasicFilter.o `test -f 'TokenStreamBasicFilter.cpp' || echo '$(srcdir)/'`TokenStreamBasicFilter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Tpo $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamBasicFilter.cpp' object='libantlr_a-TokenStreamBasicFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamBasicFilter.o `test -f 'TokenStreamBasicFilter.cpp' || echo '$(srcdir)/'`TokenStreamBasicFilter.cpp

libantlr_a-TokenStreamBasicFilter.obj: TokenStreamBasicFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamBasicFilter.obj -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Tpo -c -o libantlr_a-TokenStreamBasicFilter.obj `if test -f 'TokenStreamBasicFilter.cpp'; then $(CYGPATH_W) 'TokenStreamBasicFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamBasicFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Tpo $(DEPDIR)/libantlr_a-TokenStreamBasicFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamBasicFilter.cpp' object='libantlr_a-TokenStreamBasicFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamBasicFilter.obj `if test -f 'TokenStreamBasicFilter.cpp'; then $(CYGPATH_W) 'TokenStreamBasicFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamBasicFilter.cpp'; fi`

libantlr_a-TokenStreamHiddenTokenFilter.o: TokenStreamHiddenTokenFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamHiddenTokenFilter.o -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Tpo -c -o libantlr_a-TokenStreamHiddenTokenFilter.o `test -f 'TokenStreamHiddenTokenFilter.cpp' || echo '$(srcdir)/'`TokenStreamHiddenTokenFilter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Tpo $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamHiddenTokenFilter.cpp' object='libantlr_a-TokenStreamHiddenTokenFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamHiddenTokenFilter.o `test -f 'TokenStreamHiddenTokenFilter.cpp' || echo '$(srcdir)/'`TokenStreamHiddenTokenFilter.cpp

libantlr_a-TokenStreamHiddenTokenFilter.obj: TokenStreamHiddenTokenFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamHiddenTokenFilter.obj -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Tpo -c -o libantlr_a-TokenStreamHiddenTokenFilter.obj `if test -f 'TokenStreamHiddenTokenFilter.cpp'; then $(CYGPATH_W) 'TokenStreamHiddenTokenFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamHiddenTokenFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Tpo $(DEPDIR)/libantlr_a-TokenStreamHiddenTokenFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamHiddenTokenFilter.cpp' object='libantlr_a-TokenStreamHiddenTokenFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamHiddenTokenFilter.obj `if test -f 'TokenStreamHiddenTokenFilter.cpp'; then $(CYGPATH_W) 'TokenStreamHiddenTokenFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamHiddenTokenFilter.cpp'; fi`

libantlr_a-TokenStreamSelector.o: TokenStreamSelector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamSelector.o -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamSelector.Tpo -c -o libantlr_a-TokenStreamSelector.o `test -f 'TokenStreamSelector.cpp' || echo '$(srcdir)/'`TokenStreamSelector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamSelector.Tpo $(DEPDIR)/libantlr_a-TokenStreamSelector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamSelector.cpp' object='libantlr_a-TokenStreamSelector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamSelector.o `test -f 'TokenStreamSelector.cpp' || echo '$(srcdir)/'`TokenStreamSelector.cpp

libantlr_a-TokenStreamSelector.obj: TokenStreamSelector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TokenStreamSelector.obj -MD -MP -MF $(DEPDIR)/libantlr_a-TokenStreamSelector.Tpo -c -o libantlr_a-TokenStreamSelector.obj `if test -f 'TokenStreamSelector.cpp'; then $(CYGPATH_W) 'TokenStreamSelector.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamSelector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TokenStreamSelector.Tpo $(DEPDIR)/libantlr_a-TokenStreamSelector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TokenStreamSelector.cpp' object='libantlr_a-TokenStreamSelector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TokenStreamSelector.obj `if test -f 'TokenStreamSelector.cpp'; then $(CYGPATH_W) 'TokenStreamSelector.cpp'; else $(CYGPATH_W) '$(srcdir)/TokenStreamSelector.cpp'; fi`

libantlr_a-TreeParser.o: TreeParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TreeParser.o -MD -MP -MF $(DEPDIR)/libantlr_a-TreeParser.Tpo -c -o libantlr_a-TreeParser.o `test -f 'TreeParser.cpp' || echo '$(srcdir)/'`TreeParser.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TreeParser.Tpo $(DEPDIR)/libantlr_a-TreeParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TreeParser.cpp' object='libantlr_a-TreeParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TreeParser.o `test -f 'TreeParser.cpp' || echo '$(srcdir)/'`TreeParser.cpp

libantlr_a-TreeParser.obj: TreeParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -MT libantlr_a-TreeParser.obj -MD -MP -MF $(DEPDIR)/libantlr_a-TreeParser.Tpo -c -o libantlr_a-TreeParser.obj `if test -f 'TreeParser.cpp'; then $(CYGPATH_W) 'TreeParser.cpp'; else $(CYGPATH_W) '$(srcdir)/TreeParser.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libantlr_a-TreeParser.Tpo $(DEPDIR)/libantlr_a-TreeParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TreeParser.cpp' object='libantlr_a-TreeParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libantlr_a_CXXFLAGS) $(CXXFLAGS) -c -o libantlr_a-TreeParser.obj `if test -f 'TreeParser.cpp'; then $(CYGPATH_W) 'TreeParser.cpp'; else $(CYGPATH_W) '$(srcdir)/TreeParser.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
