#ifndef INC_GDLTokenTypes_hpp_
#define INC_GDLTokenTypes_hpp_

/* $ANTLR 2.7.7 (20110618): "gdlc.g" -> "GDLTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API GDLTokenTypes {
#endif
	enum {
		EOF_ = 1,
		ALL = 4,
		ASSIGN = 5,
		ASSIGN_INPLACE = 6,
		ASSIGN_REPLACE = 7,
		ASSIGN_ARRAYEXPR_MFCALL = 8,
		ARRAYDEF = 9,
		ARRAYDEF_CONST = 10,
		ARRAYIX = 11,
		ARRAYIX_ALL = 12,
		ARRAYIX_ORANGE = 13,
		ARRAYIX_RANGE = 14,
		ARRAYIX_ORANGE_S = 15,
		ARRAYIX_RANGE_S = 16,
		ARRAYEXPR = 17,
		ARRAYEXPR_FN = 18,
		ARRAYEXPR_MFCALL = 19,
		BLOCK = 20,
		BREAK = 21,
		CSBLOCK = 22,
		CONTINUE = 23,
		COMMONDECL = 24,
		COMMONDEF = 25,
		CONSTANT = 26,
		DEREF = 27,
		ELSEBLK = 28,
		EXPR = 29,
		FOR = 30,
		FOR_STEP = 31,
		FOREACH = 32,
		FOREACH_INDEX = 33,
		FOR_LOOP = 34,
		FOR_STEP_LOOP = 35,
		FOREACH_LOOP = 36,
		FOREACH_INDEX_LOOP = 37,
		FCALL = 38,
		FCALL_LIB = 39,
		FCALL_LIB_N_ELEMENTS = 40,
		FCALL_LIB_RETNEW = 41,
		IF_ELSE = 42,
		KEYDECL = 43,
		KEYDEF = 44,
		KEYDEF_REF = 45,
		KEYDEF_REF_CHECK = 46,
		KEYDEF_REF_EXPR = 47,
		LABEL = 48,
		MPCALL = 49,
		MPCALL_PARENT = 50,
		MFCALL = 51,
		MFCALL_LIB = 52,
		MFCALL_LIB_RETNEW = 53,
		MFCALL_PARENT = 54,
		MFCALL_PARENT_LIB = 55,
		MFCALL_PARENT_LIB_RETNEW = 56,
		NOP = 57,
		NSTRUC = 58,
		NSTRUC_REF = 59,
		ON_IOERROR_NULL = 60,
		PCALL = 61,
		PCALL_LIB = 62,
		PARADECL = 63,
		PARAEXPR = 64,
		PARAEXPR_VN = 65,
		POSTDEC = 66,
		POSTINC = 67,
		DECSTATEMENT = 68,
		INCSTATEMENT = 69,
		REF = 70,
		REF_VN = 71,
		REF_CHECK = 72,
		REF_CHECK_VN = 73,
		REF_EXPR = 74,
		REF_EXPR_VN = 75,
		REPEAT = 76,
		REPEAT_LOOP = 77,
		RETURN = 78,
		RETF = 79,
		RETP = 80,
		STRUC = 81,
		SYSVAR = 82,
		UMINUS = 83,
		VAR = 84,
		VARPTR = 85,
		WHILE = 86,
		IDENTIFIER = 87,
		AND_OP = 88,
		BEGIN = 89,
		CASE = 90,
		COMMON = 91,
		COMPILE_OPT = 92,
		DO = 93,
		ELSE = 94,
		END = 95,
		ENDCASE = 96,
		ENDELSE = 97,
		ENDFOR = 98,
		ENDFOREACH = 99,
		ENDIF = 100,
		ENDREP = 101,
		ENDSWITCH = 102,
		ENDWHILE = 103,
		EQ_OP = 104,
		FORWARD = 105,
		FUNCTION = 106,
		GE_OP = 107,
		GOTO = 108,
		GT_OP = 109,
		IF = 110,
		INHERITS = 111,
		LE_OP = 112,
		LT_OP = 113,
		MOD_OP = 114,
		NE_OP = 115,
		NOT_OP = 116,
		OF = 117,
		ON_IOERROR = 118,
		OR_OP = 119,
		PRO = 120,
		SWITCH = 121,
		THEN = 122,
		UNTIL = 123,
		XOR_OP = 124,
		METHOD = 125,
		COMMA = 126,
		COLON = 127,
		END_U = 128,
		EQUAL = 129,
		DEC = 130,
		INC = 131,
		AND_OP_EQ = 132,
		ASTERIX_EQ = 133,
		EQ_OP_EQ = 134,
		GE_OP_EQ = 135,
		GTMARK_EQ = 136,
		GT_OP_EQ = 137,
		LE_OP_EQ = 138,
		LTMARK_EQ = 139,
		LT_OP_EQ = 140,
		MATRIX_OP1_EQ = 141,
		MATRIX_OP2_EQ = 142,
		MINUS_EQ = 143,
		MOD_OP_EQ = 144,
		NE_OP_EQ = 145,
		OR_OP_EQ = 146,
		PLUS_EQ = 147,
		POW_EQ = 148,
		SLASH_EQ = 149,
		XOR_OP_EQ = 150,
		MEMBER = 151,
		LBRACE = 152,
		RBRACE = 153,
		SLASH = 154,
		LSQUARE = 155,
		RSQUARE = 156,
		SYSVARNAME = 157,
		EXCLAMATION = 158,
		LCURLY = 159,
		RCURLY = 160,
		CONSTANT_HEX_BYTE = 161,
		CONSTANT_HEX_LONG = 162,
		CONSTANT_HEX_LONG64 = 163,
		CONSTANT_HEX_INT = 164,
		CONSTANT_HEX_I = 165,
		CONSTANT_HEX_ULONG = 166,
		CONSTANT_HEX_ULONG64 = 167,
		CONSTANT_HEX_UI = 168,
		CONSTANT_HEX_UINT = 169,
		CONSTANT_BYTE = 170,
		CONSTANT_LONG = 171,
		CONSTANT_LONG64 = 172,
		CONSTANT_INT = 173,
		CONSTANT_I = 174,
		CONSTANT_ULONG = 175,
		CONSTANT_ULONG64 = 176,
		CONSTANT_UI = 177,
		CONSTANT_UINT = 178,
		CONSTANT_OCT_BYTE = 179,
		CONSTANT_OCT_LONG = 180,
		CONSTANT_OCT_LONG64 = 181,
		CONSTANT_OCT_INT = 182,
		CONSTANT_OCT_I = 183,
		CONSTANT_OCT_ULONG = 184,
		CONSTANT_OCT_ULONG64 = 185,
		CONSTANT_OCT_UI = 186,
		CONSTANT_OCT_UINT = 187,
		CONSTANT_FLOAT = 188,
		CONSTANT_DOUBLE = 189,
		CONSTANT_BIN_BYTE = 190,
		CONSTANT_BIN_LONG = 191,
		CONSTANT_BIN_LONG64 = 192,
		CONSTANT_BIN_INT = 193,
		CONSTANT_BIN_I = 194,
		CONSTANT_BIN_ULONG = 195,
		CONSTANT_BIN_ULONG64 = 196,
		CONSTANT_BIN_UI = 197,
		CONSTANT_BIN_UINT = 198,
		ASTERIX = 199,
		DOT = 200,
		STRING_LITERAL = 201,
		POW = 202,
		MATRIX_OP1 = 203,
		MATRIX_OP2 = 204,
		PLUS = 205,
		MINUS = 206,
		LTMARK = 207,
		GTMARK = 208,
		LOG_NEG = 209,
		LOG_AND = 210,
		LOG_OR = 211,
		QUESTION = 212,
		STRING = 213,
		INCLUDE = 214,
		EOL = 215,
		W = 216,
		D = 217,
		L = 218,
		H = 219,
		O = 220,
		B = 221,
		EXP = 222,
		DBL_E = 223,
		DBL = 224,
		CONSTANT_OR_STRING_LITERAL = 225,
		COMMENT = 226,
		END_MARKER = 227,
		WHITESPACE = 228,
		SKIP_LINES = 229,
		CONT_STATEMENT = 230,
		END_OF_LINE = 231,
		MAX_TOKEN_NUMBER = 232,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_GDLTokenTypes_hpp_*/
