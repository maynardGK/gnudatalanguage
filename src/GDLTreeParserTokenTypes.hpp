#ifndef INC_GDLTreeParserTokenTypes_hpp_
#define INC_GDLTreeParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20071205): "gdlc.tree.g" -> "GDLTreeParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API GDLTreeParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		ALL = 4,
		ASSIGN = 5,
		ASSIGN_INPLACE = 6,
		ASSIGN_REPLACE = 7,
		ARRAYDEF = 8,
		ARRAYDEF_CONST = 9,
		ARRAYIX = 10,
		ARRAYIX_ALL = 11,
		ARRAYIX_ORANGE = 12,
		ARRAYIX_RANGE = 13,
		ARRAYIX_ORANGE_S = 14,
		ARRAYIX_RANGE_S = 15,
		ARRAYEXPR = 16,
		ARRAYEXPR_FN = 17,
		BLOCK = 18,
		BREAK = 19,
		CONTINUE = 20,
		COMMONDECL = 21,
		COMMONDEF = 22,
		CONSTANT = 23,
		DEREF = 24,
		ELSEBLK = 25,
		EXPR = 26,
		FOR_STEP = 27,
		FCALL = 28,
		FCALL_LIB = 29,
		FCALL_LIB_RETNEW = 30,
		IF_ELSE = 31,
		KEYDECL = 32,
		KEYDEF = 33,
		KEYDEF_REF = 34,
		KEYDEF_REF_CHECK = 35,
		KEYDEF_REF_EXPR = 36,
		LABEL = 37,
		MPCALL = 38,
		MPCALL_PARENT = 39,
		MFCALL = 40,
		MFCALL_LIB = 41,
		MFCALL_LIB_RETNEW = 42,
		MFCALL_PARENT = 43,
		MFCALL_PARENT_LIB = 44,
		MFCALL_PARENT_LIB_RETNEW = 45,
		NOP = 46,
		NSTRUC = 47,
		NSTRUC_REF = 48,
		ON_IOERROR_NULL = 49,
		PCALL = 50,
		PCALL_LIB = 51,
		PARADECL = 52,
		PARAEXPR = 53,
		POSTDEC = 54,
		POSTINC = 55,
		DECSTATEMENT = 56,
		INCSTATEMENT = 57,
		REF = 58,
		REF_CHECK = 59,
		REF_EXPR = 60,
		RETURN = 61,
		RETF = 62,
		RETP = 63,
		STRUC = 64,
		SYSVAR = 65,
		UMINUS = 66,
		VAR = 67,
		VARPTR = 68,
		IDENTIFIER = 69,
		AND_OP = 70,
		BEGIN = 71,
		CASE = 72,
		COMMON = 73,
		COMPILE_OPT = 74,
		DO = 75,
		ELSE = 76,
		END = 77,
		ENDCASE = 78,
		ENDELSE = 79,
		ENDFOR = 80,
		ENDIF = 81,
		ENDREP = 82,
		ENDSWITCH = 83,
		ENDWHILE = 84,
		EQ_OP = 85,
		FOR = 86,
		FORWARD = 87,
		FUNCTION = 88,
		GE_OP = 89,
		GOTO = 90,
		GT_OP = 91,
		IF = 92,
		INHERITS = 93,
		LE_OP = 94,
		LT_OP = 95,
		MOD_OP = 96,
		NE_OP = 97,
		NOT_OP = 98,
		OF = 99,
		ON_IOERROR = 100,
		OR_OP = 101,
		PRO = 102,
		REPEAT = 103,
		SWITCH = 104,
		THEN = 105,
		UNTIL = 106,
		WHILE = 107,
		XOR_OP = 108,
		METHOD = 109,
		COMMA = 110,
		COLON = 111,
		END_U = 112,
		EQUAL = 113,
		DEC = 114,
		INC = 115,
		DOT = 116,
		AND_OP_EQ = 117,
		ASTERIX_EQ = 118,
		EQ_OP_EQ = 119,
		GE_OP_EQ = 120,
		GTMARK_EQ = 121,
		GT_OP_EQ = 122,
		LE_OP_EQ = 123,
		LTMARK_EQ = 124,
		LT_OP_EQ = 125,
		MATRIX_OP1_EQ = 126,
		MATRIX_OP2_EQ = 127,
		MINUS_EQ = 128,
		MOD_OP_EQ = 129,
		NE_OP_EQ = 130,
		OR_OP_EQ = 131,
		PLUS_EQ = 132,
		POW_EQ = 133,
		SLASH_EQ = 134,
		XOR_OP_EQ = 135,
		MEMBER = 136,
		LBRACE = 137,
		RBRACE = 138,
		SLASH = 139,
		LSQUARE = 140,
		RSQUARE = 141,
		SYSVARNAME = 142,
		EXCLAMATION = 143,
		LCURLY = 144,
		RCURLY = 145,
		CONSTANT_HEX_BYTE = 146,
		CONSTANT_HEX_LONG = 147,
		CONSTANT_HEX_LONG64 = 148,
		CONSTANT_HEX_INT = 149,
		CONSTANT_HEX_I = 150,
		CONSTANT_HEX_ULONG = 151,
		CONSTANT_HEX_ULONG64 = 152,
		CONSTANT_HEX_UI = 153,
		CONSTANT_HEX_UINT = 154,
		CONSTANT_BYTE = 155,
		CONSTANT_LONG = 156,
		CONSTANT_LONG64 = 157,
		CONSTANT_INT = 158,
		CONSTANT_I = 159,
		CONSTANT_ULONG = 160,
		CONSTANT_ULONG64 = 161,
		CONSTANT_UI = 162,
		CONSTANT_UINT = 163,
		CONSTANT_OCT_BYTE = 164,
		CONSTANT_OCT_LONG = 165,
		CONSTANT_OCT_LONG64 = 166,
		CONSTANT_OCT_INT = 167,
		CONSTANT_OCT_I = 168,
		CONSTANT_OCT_ULONG = 169,
		CONSTANT_OCT_ULONG64 = 170,
		CONSTANT_OCT_UI = 171,
		CONSTANT_OCT_UINT = 172,
		CONSTANT_FLOAT = 173,
		CONSTANT_DOUBLE = 174,
		CONSTANT_BIN_BYTE = 175,
		CONSTANT_BIN_LONG = 176,
		CONSTANT_BIN_LONG64 = 177,
		CONSTANT_BIN_INT = 178,
		CONSTANT_BIN_I = 179,
		CONSTANT_BIN_ULONG = 180,
		CONSTANT_BIN_ULONG64 = 181,
		CONSTANT_BIN_UI = 182,
		CONSTANT_BIN_UINT = 183,
		ASTERIX = 184,
		STRING_LITERAL = 185,
		POW = 186,
		MATRIX_OP1 = 187,
		MATRIX_OP2 = 188,
		PLUS = 189,
		MINUS = 190,
		LTMARK = 191,
		GTMARK = 192,
		LOG_NEG = 193,
		LOG_AND = 194,
		LOG_OR = 195,
		QUESTION = 196,
		STRING = 197,
		INCLUDE = 198,
		EOL = 199,
		W = 200,
		D = 201,
		L = 202,
		H = 203,
		O = 204,
		B = 205,
		EXP = 206,
		DBL_E = 207,
		DBL = 208,
		CONSTANT_OR_STRING_LITERAL = 209,
		COMMENT = 210,
		END_MARKER = 211,
		WHITESPACE = 212,
		SKIP_LINES = 213,
		CONT_STATEMENT = 214,
		END_OF_LINE = 215,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_GDLTreeParserTokenTypes_hpp_*/
