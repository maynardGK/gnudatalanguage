#ifndef INC_GDLTreeParserTokenTypes_hpp_
#define INC_GDLTreeParserTokenTypes_hpp_

/* $ANTLR 2.7.6 (20071205): "gdlc.tree.g" -> "GDLTreeParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API GDLTreeParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		ALL = 4,
		ASSIGN = 5,
		ASSIGN_INPLACE = 6,
		ASSIGN_REPLACE = 7,
		ASSIGN_ARRAYEXPR_MFCALL = 8,
		ARRAYDEF = 9,
		ARRAYDEF_CONST = 10,
		ARRAYIX = 11,
		ARRAYIX_ALL = 12,
		ARRAYIX_ORANGE = 13,
		ARRAYIX_RANGE = 14,
		ARRAYIX_ORANGE_S = 15,
		ARRAYIX_RANGE_S = 16,
		ARRAYEXPR = 17,
		ARRAYEXPR_FN = 18,
		ARRAYEXPR_MFCALL = 19,
		BLOCK = 20,
		BREAK = 21,
		CONTINUE = 22,
		COMMONDECL = 23,
		COMMONDEF = 24,
		CONSTANT = 25,
		DEREF = 26,
		ELSEBLK = 27,
		EXPR = 28,
		FOR_STEP = 29,
		FCALL = 30,
		FCALL_LIB = 31,
		FCALL_LIB_RETNEW = 32,
		IF_ELSE = 33,
		KEYDECL = 34,
		KEYDEF = 35,
		KEYDEF_REF = 36,
		KEYDEF_REF_CHECK = 37,
		KEYDEF_REF_EXPR = 38,
		LABEL = 39,
		MPCALL = 40,
		MPCALL_PARENT = 41,
		MFCALL = 42,
		MFCALL_LIB = 43,
		MFCALL_LIB_RETNEW = 44,
		MFCALL_PARENT = 45,
		MFCALL_PARENT_LIB = 46,
		MFCALL_PARENT_LIB_RETNEW = 47,
		NOP = 48,
		NSTRUC = 49,
		NSTRUC_REF = 50,
		ON_IOERROR_NULL = 51,
		PCALL = 52,
		PCALL_LIB = 53,
		PARADECL = 54,
		PARAEXPR = 55,
		POSTDEC = 56,
		POSTINC = 57,
		DECSTATEMENT = 58,
		INCSTATEMENT = 59,
		REF = 60,
		REF_CHECK = 61,
		REF_EXPR = 62,
		RETURN = 63,
		RETF = 64,
		RETP = 65,
		STRUC = 66,
		SYSVAR = 67,
		UMINUS = 68,
		VAR = 69,
		VARPTR = 70,
		IDENTIFIER = 71,
		AND_OP = 72,
		BEGIN = 73,
		CASE = 74,
		COMMON = 75,
		COMPILE_OPT = 76,
		DO = 77,
		ELSE = 78,
		END = 79,
		ENDCASE = 80,
		ENDELSE = 81,
		ENDFOR = 82,
		ENDIF = 83,
		ENDREP = 84,
		ENDSWITCH = 85,
		ENDWHILE = 86,
		EQ_OP = 87,
		FOR = 88,
		FORWARD = 89,
		FUNCTION = 90,
		GE_OP = 91,
		GOTO = 92,
		GT_OP = 93,
		IF = 94,
		INHERITS = 95,
		LE_OP = 96,
		LT_OP = 97,
		MOD_OP = 98,
		NE_OP = 99,
		NOT_OP = 100,
		OF = 101,
		ON_IOERROR = 102,
		OR_OP = 103,
		PRO = 104,
		REPEAT = 105,
		SWITCH = 106,
		THEN = 107,
		UNTIL = 108,
		WHILE = 109,
		XOR_OP = 110,
		METHOD = 111,
		COMMA = 112,
		COLON = 113,
		END_U = 114,
		EQUAL = 115,
		DEC = 116,
		INC = 117,
		AND_OP_EQ = 118,
		ASTERIX_EQ = 119,
		EQ_OP_EQ = 120,
		GE_OP_EQ = 121,
		GTMARK_EQ = 122,
		GT_OP_EQ = 123,
		LE_OP_EQ = 124,
		LTMARK_EQ = 125,
		LT_OP_EQ = 126,
		MATRIX_OP1_EQ = 127,
		MATRIX_OP2_EQ = 128,
		MINUS_EQ = 129,
		MOD_OP_EQ = 130,
		NE_OP_EQ = 131,
		OR_OP_EQ = 132,
		PLUS_EQ = 133,
		POW_EQ = 134,
		SLASH_EQ = 135,
		XOR_OP_EQ = 136,
		MEMBER = 137,
		LBRACE = 138,
		RBRACE = 139,
		SLASH = 140,
		LSQUARE = 141,
		RSQUARE = 142,
		SYSVARNAME = 143,
		EXCLAMATION = 144,
		LCURLY = 145,
		RCURLY = 146,
		CONSTANT_HEX_BYTE = 147,
		CONSTANT_HEX_LONG = 148,
		CONSTANT_HEX_LONG64 = 149,
		CONSTANT_HEX_INT = 150,
		CONSTANT_HEX_I = 151,
		CONSTANT_HEX_ULONG = 152,
		CONSTANT_HEX_ULONG64 = 153,
		CONSTANT_HEX_UI = 154,
		CONSTANT_HEX_UINT = 155,
		CONSTANT_BYTE = 156,
		CONSTANT_LONG = 157,
		CONSTANT_LONG64 = 158,
		CONSTANT_INT = 159,
		CONSTANT_I = 160,
		CONSTANT_ULONG = 161,
		CONSTANT_ULONG64 = 162,
		CONSTANT_UI = 163,
		CONSTANT_UINT = 164,
		CONSTANT_OCT_BYTE = 165,
		CONSTANT_OCT_LONG = 166,
		CONSTANT_OCT_LONG64 = 167,
		CONSTANT_OCT_INT = 168,
		CONSTANT_OCT_I = 169,
		CONSTANT_OCT_ULONG = 170,
		CONSTANT_OCT_ULONG64 = 171,
		CONSTANT_OCT_UI = 172,
		CONSTANT_OCT_UINT = 173,
		CONSTANT_FLOAT = 174,
		CONSTANT_DOUBLE = 175,
		CONSTANT_BIN_BYTE = 176,
		CONSTANT_BIN_LONG = 177,
		CONSTANT_BIN_LONG64 = 178,
		CONSTANT_BIN_INT = 179,
		CONSTANT_BIN_I = 180,
		CONSTANT_BIN_ULONG = 181,
		CONSTANT_BIN_ULONG64 = 182,
		CONSTANT_BIN_UI = 183,
		CONSTANT_BIN_UINT = 184,
		ASTERIX = 185,
		DOT = 186,
		STRING_LITERAL = 187,
		POW = 188,
		MATRIX_OP1 = 189,
		MATRIX_OP2 = 190,
		PLUS = 191,
		MINUS = 192,
		LTMARK = 193,
		GTMARK = 194,
		LOG_NEG = 195,
		LOG_AND = 196,
		LOG_OR = 197,
		QUESTION = 198,
		STRING = 199,
		INCLUDE = 200,
		EOL = 201,
		W = 202,
		D = 203,
		L = 204,
		H = 205,
		O = 206,
		B = 207,
		EXP = 208,
		DBL_E = 209,
		DBL = 210,
		CONSTANT_OR_STRING_LITERAL = 211,
		COMMENT = 212,
		END_MARKER = 213,
		WHITESPACE = 214,
		SKIP_LINES = 215,
		CONT_STATEMENT = 216,
		END_OF_LINE = 217,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_GDLTreeParserTokenTypes_hpp_*/
